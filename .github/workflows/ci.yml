name: CI with Docker

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install docker-compose
        run: |
          curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build and run services
        run: |
          docker-compose -f docker-compose.yaml up --build -d

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for app service to become healthy..."
          RETRIES=30
          until [ $(docker inspect --format='{{.State.Health.Status}}' $(docker-compose -f docker-compose.yaml ps -q app)) == 'healthy' ] || [ $RETRIES -eq 0 ]; do
            echo -n "."
            sleep 5
            RETRIES=$(($RETRIES-1))
          done
          if [ $RETRIES -eq 0 ]; then
            echo "App service failed to become healthy."
            exit 1
          fi
          echo "App is healthy."

      - name: Run tests
        run: |
          docker-compose -f docker-compose.yaml exec app pytest tests
