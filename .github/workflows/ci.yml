name: CI with Docker

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PORT: 3005
      MONGO_URI: mongodb://db:27017/8_films
      MONGO_DB_NAME: 8_films
      REDIS_URL: redis://redis:6379
      BCRYPT_ROUNDS: 4
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      CLIENT_URL: ${{ secrets.CLIENT_URL }}
      STATIC_FILES_DIR: ${{ secrets.STATIC_FILES_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install docker-compose
        run: |
          curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ./.pip_cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build and run services
        run: |
          docker-compose -f docker-compose.yaml up --build -d

      - name: Wait for services to start
        run: |
          echo "Waiting for all services to start..."
          sleep 30

      - name: Run tests
        run: |
          docker-compose -f docker-compose.yaml exec app pytest tests
